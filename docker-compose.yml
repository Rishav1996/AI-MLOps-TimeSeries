version: "1.0"
services:
  db:
    build: ./mysql
    container_name: mysql_db
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "mlops_ts_fcst"
      MYSQL_USER: "mlops_user"
      MYSQL_PASSWORD: "MLOPS1234"
    ports:
      - "8306:3306"
    networks:
      - internal-network
    volumes:
      - dbdata:/var/lib/mysql

  redis_db:
    image: redis:alpine3.15
    container_name: redis
    command: redis-server
    ports:
      - 6379:6379
    networks:
      - internal-network
    volumes:
      - redis_db_data:/data

  celery_data_processing:
    build: ./python_image
    command: /home/conda/bin/celery -A data_processing.data_processing_pipeline worker --loglevel=INFO --autoscale=1,1 -Q data-processing-pipeline -E --without-gossip --without-mingle
    image: python-image:1.0
    environment:
      - MKL_NUM_THREADS=1
      - PENBLAS_NUM_THREADS=1
      - BLIS_NUM_THREADS=1
      - OMP_NUM_THREADS=1
    depends_on:
      - redis_db
      - db
    deploy:
      replicas: 1
    networks:
      - internal-network
    volumes:
      - api_data:/app/
      - type: bind
        source: ./backend/
        target: /app/backend/

  celery_forecasting:
    image: python-image:1.0
    command: /home/conda/bin/celery -A forecasting.forecasting_pipeline worker --loglevel=INFO --autoscale=4,2 -Q forecasting-pipeline -E --without-gossip --without-mingle
    environment:
      - MKL_NUM_THREADS=1
      - PENBLAS_NUM_THREADS=1
      - BLIS_NUM_THREADS=1
      - OMP_NUM_THREADS=1
    depends_on:
      - redis_db
      - db
    networks:
      - internal-network
    deploy:
      replicas: 2
    volumes:
      - api_data:/app/
      - type: bind
        source: ./backend/
        target: /app/backend/
  
  flower_web:
    image: python-image:1.0
    command: /home/conda/bin/celery --broker redis://redis_db:6379 --result-backend redis -A celery_app flower --loglevel=info
    container_name: flower_monitor
    ports:
      - 5555:5555
    volumes:
      - api_data:/app/
      - type: bind
        source: ./backend/
        target: /app/backend/
    networks:
      - internal-network
    depends_on:
      - celery_forecasting
      - celery_data_processing

  backend:
    image: python-image:1.0
    command: /home/conda/bin/uvicorn app:app --port 8000 --reload --workers 1 --host 0.0.0.0 --log-level debug
    container_name: api_container
    ports:
      - "8000:8000"
    depends_on:
      - redis_db
      - db
      - flower_web
      - celery_data_processing
      - celery_forecasting
    networks:
      - internal-network
    volumes:
      - api_data:/app/
      - type: bind
        source: ./backend/
        target: /app/backend/
  
  frontend:
    build: ./frontend
    container_name: frontend_container
    command: serve -s build -p 8001
    image: node-image:1.0
    ports:
      - "8001:8001"
    depends_on:
      - visualization
    networks:
      - internal-network
    volumes:
      - frontend_data:/app/
      - type: bind
        source: ./frontend/
        target: /app/frontend/
    links:
      - backend
      - visualization
      - flower_web
  
  visualization:
    build: ./python_visual_image
    container_name: visual_container
    command: streamlit run app.py
    image: python-visual-image:1.0
    ports:
      - "8501:8501"
    depends_on:
      - backend
    networks:
      - internal-network
    volumes:
      - visualization_data:/app/
      - type: bind
        source: ./visualization/
        target: /app/visualization/

networks:
  internal-network:
    driver: bridge
volumes:
  dbdata:
  api_data:
  redis_db_data:
  frontend_data:
  visualization_data: